server:
  servlet:
    context-path: "/api"
  port: ${USER_SERVICE_PORT:8080}

spring:
  application:
    name: user-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/users}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driverClassName: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  liquibase:
    enabled: true
    drop-first: false
    change-log: classpath:db/master.xml
    default-schema: public
    contexts: ${spring.profiles.active:prod} # use dev for create test data

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org.springframework.web.HttpLogging: TRACE
    reactor.netty.http.server: DEBUG
    reactor.netty.http.client: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  zipkin:
    tracing:
      endpoint: ${USER_ZIPKIN_URL:http://localhost:9411/api/v2/spans}

springdoc:
  api-docs:
    path: "/api-docs" #api will response on /api-docs
  swagger-ui:
    path: "/swagger-ui.html" # swagger: http://localhost:8080/api/swagger-ui/index.html
    version: "v1"

api:
  response-codes:
    ok:
      desc: OK
    badRequest:
      desc: BAD_REQUEST
    notFound:
      desc: NOT_FOUND
